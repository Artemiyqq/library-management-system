// <auto-generated />
using System;
using LibraryManagementAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryManagementAPI.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20240908220221_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("LibraryManagementAPI.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("author");

                    b.Property<uint>("CopiesInStock")
                        .HasColumnType("int unsigned")
                        .HasColumnName("copies_in_stock");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("language");

                    b.Property<string>("Overview")
                        .HasMaxLength(1800)
                        .HasColumnType("varchar(1800)")
                        .HasColumnName("overview");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("title");

                    b.Property<uint>("TotalCopies")
                        .HasColumnType("int unsigned")
                        .HasColumnName("total_copies");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("book", (string)null);
                });

            modelBuilder.Entity("LibraryManagementAPI.Models.Borrower", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("full_name");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telephone");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("borrower", (string)null);
                });

            modelBuilder.Entity("LibraryManagementAPI.Models.Efmigrationshistory", b =>
                {
                    b.Property<string>("MigrationId")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("ProductVersion")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.HasKey("MigrationId")
                        .HasName("PRIMARY");

                    b.ToTable("__efmigrationshistory", (string)null);
                });

            modelBuilder.Entity("LibraryManagementAPI.Models.IssuedBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int")
                        .HasColumnName("book_id");

                    b.Property<int>("BorrowerId")
                        .HasColumnType("int")
                        .HasColumnName("borrower_id");

                    b.Property<DateOnly>("IssueDate")
                        .HasColumnType("date")
                        .HasColumnName("issue_date");

                    b.Property<int>("LibrarianId")
                        .HasColumnType("int")
                        .HasColumnName("librarian_id");

                    b.Property<string>("Notes")
                        .HasColumnType("text")
                        .HasColumnName("notes");

                    b.Property<DateOnly>("ReturnBefore")
                        .HasColumnType("date")
                        .HasColumnName("return_before");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "BookId" }, "book_id");

                    b.HasIndex(new[] { "BorrowerId" }, "borrower_id");

                    b.HasIndex(new[] { "LibrarianId" }, "librarian_id");

                    b.ToTable("issued_book", (string)null);
                });

            modelBuilder.Entity("LibraryManagementAPI.Models.Librarian", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("login");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("password");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("librarian", (string)null);
                });

            modelBuilder.Entity("LibraryManagementAPI.Models.IssuedBook", b =>
                {
                    b.HasOne("LibraryManagementAPI.Models.Book", "Book")
                        .WithMany("IssuedBooks")
                        .HasForeignKey("BookId")
                        .IsRequired()
                        .HasConstraintName("issued_book_ibfk_1");

                    b.HasOne("LibraryManagementAPI.Models.Borrower", "Borrower")
                        .WithMany("IssuedBooks")
                        .HasForeignKey("BorrowerId")
                        .IsRequired()
                        .HasConstraintName("issued_book_ibfk_2");

                    b.HasOne("LibraryManagementAPI.Models.Librarian", "Librarian")
                        .WithMany("IssuedBooks")
                        .HasForeignKey("LibrarianId")
                        .IsRequired()
                        .HasConstraintName("issued_book_ibfk_3");

                    b.Navigation("Book");

                    b.Navigation("Borrower");

                    b.Navigation("Librarian");
                });

            modelBuilder.Entity("LibraryManagementAPI.Models.Book", b =>
                {
                    b.Navigation("IssuedBooks");
                });

            modelBuilder.Entity("LibraryManagementAPI.Models.Borrower", b =>
                {
                    b.Navigation("IssuedBooks");
                });

            modelBuilder.Entity("LibraryManagementAPI.Models.Librarian", b =>
                {
                    b.Navigation("IssuedBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
